{"version":3,"file":"static/js/880.09a8d362.chunk.js","mappings":"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","sources":["pages/List.jsx"],"sourcesContent":["import React, { useEffect, createRef,useRef, useState } from \"react\";\r\nimport * as echarts from \"echarts\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./scss/list.scss\";\r\nexport const List = (props) => {\r\n  const eyeball = useRef();\r\n  // const [leep, setLeep] = useState(false);\r\n  // const [sleep, setSleep] = useState(false);\r\n  const [weakup, setWeakup] = useState(\"eyeSocketSleeping\"); //休息：eyeSocketSleeping 醒来：eyeSocketLooking\r\n  const [opt, setOpt] = useState({ eyeXDeg: 0, eyeYDeg: 0 });\r\n  let eyeballChart;\r\n  let leftRotSize = 0; // 旋转角度\r\n  let ballSize = 0; // 眼睛尺寸\r\n  let ballColor = \"transparent\";\r\n  let rotTimer; // 定时器\r\n  let sleepTimer;//延时器\r\n  const someStyle = {\r\n    \"--c-eyeSocket\": sleep() ? \"rgb(255,187,255)\" : \"rgb(41, 104, 217)\",\r\n    \"--c-eyeSocket-outer\": sleep() ? \"rgb(238,85,135)\" : \"#02ffff\",\r\n    \"--c-eyeSocket-outer-shadow\": sleep() ? \"rgb(255, 60, 86)\" : \"transparent\",\r\n    \"--c-eyeSocket-inner\": sleep() ? \"rgb(208,14,74)\" : \"rgb(35, 22, 140)\",\r\n  };\r\n  function sleep() {\r\n    if (weakup === \"eyeSocketLooking\") return true;\r\n    else return false;\r\n  }\r\n  useEffect(() => {\r\n    eyeballChart = echarts.init(eyeball.current); // 初始化画布\r\n    getEyeballChart();//初始化眼睛\r\n\r\n\r\n\r\n    // toSleep()\r\n    return () => {\r\n      clearTimeout(sleepTimer);\r\n      clearInterval(rotTimer); // 清除定时器\r\n    };\r\n  }, []);\r\n\r\n  function getEyeballChart() {\r\n    eyeballChart.setOption({\r\n      series: [\r\n        {\r\n          type: \"gauge\", // 使用仪表盘类型\r\n          radius: \"8\", // 采用负数是为了让分割线从内向外延伸\r\n          clockwise: false,\r\n          startAngle: `${0 + leftRotSize * 5}`, // 加为逆时针旋转，乘5表示速度为leftRotSize的倍\r\n          endAngle: `${360 + leftRotSize * 5}`,\r\n          splitNumber: 9, // 分割数量，会将270度分割为3份，所以有四根线\r\n          detail: false,\r\n          axisLine: {\r\n            show: false,\r\n          },\r\n          axisTick: false,\r\n          splitLine: {\r\n            show: true,\r\n            length: ballSize, // 分割线高度设置为眼球尺寸变量\r\n            lineStyle: {\r\n              shadowColor: ballColor, // 把眼睛的眼影颜色设为变量控制\r\n              color: ballColor,\r\n              shadowBlur: 20, // 阴影渐变\r\n              // shadowColor: \"rgb(0, 238, 255)\", // 阴影颜色\r\n              shadowOffsetY: \"0\",\r\n              //color: \"rgb(0, 238, 255)\", // 分割线颜色\r\n              width: 3, // 分割线宽度\r\n            },\r\n          },\r\n          axisLabel: false,\r\n        },\r\n      ],\r\n    });\r\n  }\r\n  function toSleep() {\r\n    clearInterval(rotTimer); // 清除定时器\r\n    rotTimer = setInterval(() => {\r\n      getEyeballChart();\r\n      if (ballSize > 0) {\r\n        ballSize -= 0.1; // 当眼球存在时慢慢减小\r\n        leftRotSize === 360 ? (leftRotSize = 0) : (leftRotSize += 0.1); // 旋转，\r\n      } else {\r\n        // setSleep(false)\r\n        setWeakup(\"eyeSocketSleeping\");\r\n        clearInterval(rotTimer);//重点，取消定时器。不然休眠后唤醒有问题\r\n      }\r\n    }, 10);\r\n    document.body.removeEventListener(\"mousemove\", focusOnMouse);\r\n    setOpt({ eyeXDeg: 0, eyeYDeg: 0 });\r\n  }\r\n  const onclickToWeakup = () => {\r\n    // if (leep||sleep) return;\r\n    if (weakup !== \"eyeSocketSleeping\") return;\r\n    clearTimeout(sleepTimer);\r\n    clearInterval(rotTimer); // 清除定时器\r\n    // 只有第一次点击存在，再次点击eyeballChart会为空,【未解决:考虑为echarts原因】\r\n    if (!eyeballChart) {\r\n      eyeballChart = echarts.init(eyeball.current);\r\n    }\r\n    console.log(eyeballChart);\r\n    // setSleep(false)\r\n    // setLeep(true);\r\n    setWeakup(\"eyeSocketLooking\");\r\n    ballColor = \"rgb(208,14,74)\";\r\n    rotTimer = setInterval(() => {\r\n      ballSize <= 50 && ballSize++;\r\n      leftRotSize === 360\r\n        ? (leftRotSize = 0)\r\n        : (leftRotSize = leftRotSize + 0.5);\r\n      getEyeballChart();\r\n    }, 10);\r\n    setTimeout(() => {\r\n      adjust();\r\n      document.body.addEventListener(\"mousemove\", focusOnMouse);\r\n    }, 3000);\r\n  };\r\n  //调整状态\r\n  function adjust() {\r\n    new Promise((res) => {\r\n      clearInterval(rotTimer); // 清除定时器\r\n      rotTimer = setInterval(() => {\r\n        getEyeballChart(); // 更新视图\r\n        ballSize > 0 && (ballSize -= 0.5); // 眼球尺寸减小\r\n        leftRotSize === 360 ? (leftRotSize = 0) : (leftRotSize += 0.1);\r\n        if (ballSize === 0) {\r\n          // 当眼球尺寸为0时，将Promise标记为resolved，然后执行后面的代码\r\n          clearInterval(rotTimer);\r\n          res();\r\n        }\r\n      }, 10);\r\n    }).then(() => {\r\n      // setSleep(true)\r\n      // setLeep(false); // 设置常态样式\r\n      setWeakup(\"\");\r\n      ballColor = \"rgb(0,238,255)\";\r\n      rotTimer = setInterval(() => {\r\n        getEyeballChart();\r\n        ballSize <= 12 && (ballSize += 0.1); // 眼球尺寸缓慢增加\r\n        leftRotSize === 360 ? (leftRotSize = 0) : (leftRotSize += 0.1);\r\n      }, 10);\r\n    });\r\n  }\r\n  //工作状态\r\n  function focusOnMouse(e) {\r\n    {\r\n      // 视口尺寸，获取到整个视口的大小\r\n      let clientWidth = window.innerWidth;\r\n      let clientHeight = window.innerHeight;\r\n      // 原点，即bigEye中心位置，页面中心\r\n      let origin = [clientWidth / 2, clientHeight / 2];\r\n      // 鼠标坐标\r\n      let mouseCoords = [e.clientX - origin[0], origin[1] - e.clientY];\r\n      // // 旋转角度\r\n      let eyeXDeg = (mouseCoords[1] / clientHeight) * 80; // 这里的80代表的是最上下边缘大眼X轴旋转角度\r\n      let eyeYDeg = (mouseCoords[0] / clientWidth) * 60;\r\n      setOpt({ eyeXDeg: eyeXDeg, eyeYDeg: eyeYDeg });\r\n      if (sleepTimer) clearTimeout(sleepTimer);\r\n      sleepTimer = setTimeout(() => {\r\n        toSleep();\r\n      }, 10000);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"table-list home-list\" style={someStyle}>\r\n      {/* sleep?'x':(leep?'eyeSocketLooking':'eyeSocketSleeping') */}\r\n      <div\r\n        className={`eyeSocket ${weakup}`}\r\n        style={{\r\n          transform: `rotateY(${opt.eyeYDeg}deg) rotateX(${opt.eyeXDeg}deg)`,\r\n        }}\r\n        onClick={onclickToWeakup}\r\n      >\r\n        <div\r\n          ref={eyeball}\r\n          style={{\r\n            height: \"100%\",\r\n            width: \"100%\",\r\n            transform: `translate(${opt.eyeYDeg / 1.5}px, ${\r\n              -opt.eyeXDeg / 1.5\r\n            }px)`,\r\n          }}\r\n        ></div>\r\n      </div>\r\n      <div\r\n        className={`eyeSocket ${weakup}`}\r\n        id=\"eyeFilter\"\r\n        onClick={onclickToWeakup}\r\n        style={{ opacity: sleep() ? \"1\" : \"0\" }}\r\n      ></div>\r\n      {/* <div className=\"filter\">\r\n   \r\n      </div> */}\r\n      <svg width=\"0\">\r\n        <filter id=\"filterl\">\r\n          <feTurbulence baseFrequency=\"1\">\r\n            <animate\r\n              id=\"animate1\"\r\n              attributeName=\"baseFrequency\"\r\n              dur=\"1s\"\r\n              from=\"0.5\"\r\n              to=\"0.55\"\r\n              begin=\"0s;animate1.end\"\r\n            ></animate>\r\n            <animate\r\n              id=\"animate2\"\r\n              attributeName=\"baseFrequency\"\r\n              dur=\"1s\"\r\n              from=\"0.55\"\r\n              to=\"0.5\"\r\n              begin=\"animate2.end\"\r\n            ></animate>\r\n          </feTurbulence>\r\n          <feDisplacementMap\r\n            in=\"SourceGraphic\"\r\n            scale=\"55\"\r\n            xChannelSelector=\"R\"\r\n            yChannelSelector=\"B\"\r\n          />\r\n        </filter>\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({});\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(List);\r\n"],"names":["List","props","eyeballChart","rotTimer","sleepTimer","eyeball","useRef","useState","weakup","setWeakup","eyeXDeg","eyeYDeg","opt","setOpt","leftRotSize","ballSize","ballColor","someStyle","sleep","getEyeballChart","setOption","series","type","radius","clockwise","startAngle","endAngle","splitNumber","detail","axisLine","show","axisTick","splitLine","length","lineStyle","shadowColor","color","shadowBlur","shadowOffsetY","width","axisLabel","useEffect","echarts","current","clearTimeout","clearInterval","onclickToWeakup","console","log","setInterval","setTimeout","Promise","res","then","document","body","addEventListener","focusOnMouse","e","clientWidth","window","innerWidth","clientHeight","innerHeight","origin","mouseCoords","clientX","clientY","removeEventListener","className","style","transform","onClick","ref","height","id","opacity","baseFrequency","attributeName","dur","from","to","begin","in","scale","xChannelSelector","yChannelSelector","connect","state"],"sourceRoot":""}