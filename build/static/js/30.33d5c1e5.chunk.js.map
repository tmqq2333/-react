{"version":3,"file":"static/js/30.33d5c1e5.chunk.js","mappings":"oOASe,SAASA,EAAOC,GAC7B,OAAgCC,EAAAA,EAAAA,WAAS,GAAzC,eAAQC,EAAR,KACMC,GADN,MACkBC,EAAAA,EAAAA,QAAO,OACzB,GAA8BH,EAAAA,EAAAA,YAA9B,0BACAI,EAAAA,EAAAA,YAAU,WAET,GAAE,IAaH,IAiDMC,EAAW,SAACC,GAChB,IACIC,EAAkBC,SAASC,cAAc,KACzCC,EAAOC,OAAOC,IAAIC,gBAAgBP,GACtCC,EAAgBG,KAAOA,EACvBH,EAAgBO,SAJC,gCAKjBN,SAASO,KAAKC,YAAYT,GAC1BA,EAAgBU,QAChBT,SAASO,KAAKG,YAAYX,GAC1BI,OAAOC,IAAIO,gBAAgBT,GAC3BU,EAAA,WAAgB,kCACjB,EACKC,EAAa,SAACC,GAClB,IAAIC,EAAS,IAAIC,WAEjBD,EAAOE,mBAAmBH,GAC1BC,EAAOG,OAAS,SAACC,GACf,IAAIC,EAAOD,EAAEE,OAAOC,OAEhBC,EAAWC,EAAAA,GAAUJ,EAAM,CAAEK,KAAM,SAAUC,YAAY,IAEzDC,EAAO,GAEXJ,EAASK,WAAWC,SAAQ,SAAUC,EAAMC,GAC1C,IAAIC,EAAKT,EAASU,OAAOH,GACrBI,EAAMV,EAAAA,GAAAA,cAAyBQ,EAAI,CAAEG,OAAQ,EAAGC,OAAQ,KAC5DC,QAAQC,IAAIJ,GAEZ,IAAIK,EAAUL,EAAIM,QAAJ,WACVC,EAAQP,EAAIM,QAAJ,YAGZN,GADAA,GADAA,EAAMA,EAAIQ,UAAUH,EAASE,EAAQ,WAAWE,SACtCC,QAAQ,+BAAgC,KACxCA,QACR,UADI,gJAINjB,GAAQO,EACRG,QAAQC,IAAIX,EACb,IAGD3B,SAAS6C,eAAe,aAAaC,UAAYnB,CAClD,CACF,EAED,OACE,iBAAKoB,UAAU,aAAf,WACE,4BACA,kBAAOtB,KAAK,OAAOuB,IAAKtD,EAAWuD,SA9EpB,WACjB,IAAIC,EAAQxD,EAAUyD,QAAQD,MAC9Bb,QAAQC,IAAIY,GACZrC,EAAWqC,EAAM,GAClB,KA2EG,eAAQzB,KAAK,UAAU2B,QA1ER,WAKjBf,QAAQC,IAAItC,SAAS6C,eAAe,cACpC,IAAIQ,EAAY7B,EAAAA,GAAAA,eACdxB,SAAS6C,eAAe,cAEtBtB,EAAW,CACbK,WAAY,GACZK,OAAQ,CAAC,GAEXV,EAASK,WAAW0B,KAAK,UACzBD,EAAU,SAAW,CAAC,CAAEE,IAAK,KAC7BhC,EAASU,OAAT,OAA4BoB,EAG5B,IAAIG,EAAOhC,EAAAA,GAAWD,EAAU,CAC9BkC,SAAU,OACVhC,KAAM,UAEJiC,EAAW,IAAIC,KAAK,CAACH,GAAO,CAAE/B,KAAM,6BACxC5B,EAAS6D,EACV,EAkDG,8BAEA,cAAME,SAAUnE,EAAhB,UACE,gBAAKoE,GAAG,kBAIf,C","sources":["pages/Repbox.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport * as XLSX from \"xlsx\";\r\nimport axios from \"axios\";\r\nimport './scss/repbox.scss'\r\nimport { Spin, message,Input,Button } from \"antd\";\r\n/**\r\n *\r\n *问题：样式设计\r\n */\r\nexport default function Repbox(props) {\r\n  const [ loading, setLoading ] = useState(false);\r\n  const inputFile = useRef(null);\r\n  const [arrList, setArrList] = useState();\r\n  useEffect(() => {\r\n    // getNetworkFile();\r\n  }, []);\r\n  // useEffect(() => {\r\n  //   if (data) {\r\n  //     console.log(data);\r\n  //     Object.keys(data).map((i) => {\r\n  //       let s = i.split(\",\").join(\"\");\r\n  //       let dom = document.getElementById(`sjs-${s}`);\r\n  //       if (dom) {\r\n  //         dom.innerHTML = data[i];\r\n  //       }\r\n  //     });\r\n  //   }\r\n  // }, [data]);\r\n  const getNetworkFile = () => {\r\n    let config = {\r\n      headers: { \"Content-Type\": \"multipart/form-data\" },\r\n    };\r\n    axios({\r\n      url: \"/rep.xlsx\",\r\n      method: \"GET\",\r\n      responseType: \"blob\",\r\n      config,\r\n    }).then((blobData) => {\r\n      //将blob转为file类型\r\n      console.log(blobData);\r\n      let file = new File([blobData.data], \"报表\", {\r\n        type: blobData.data.type,\r\n      });\r\n      console.log(file);\r\n      fileReader(file);\r\n    });\r\n  };\r\n  const fileChange = () => {\r\n    let files = inputFile.current.files;\r\n    console.log(files);\r\n    fileReader(files[0]);\r\n  };\r\n  const createBook = () => {\r\n    //使用table_to_sheet或table_to_book其中一种方法\r\n    //table_to_sheet的用法\r\n    //console.log(inputFile);\r\n    // let files = inputFile.current.files\r\n    console.log(document.getElementById(\"tableView\"));\r\n    let worksheet = XLSX.utils.table_to_sheet(\r\n      document.getElementById(\"tableView\")\r\n    );\r\n    let workbook = {\r\n      SheetNames: [],\r\n      Sheets: {},\r\n    };\r\n    workbook.SheetNames.push(\"sheet1\");\r\n    worksheet[\"!cols\"] = [{ wch: 20 }]; //设置第一列的列宽\r\n    workbook.Sheets[\"sheet1\"] = worksheet;\r\n    //table_to_book的用法\r\n    // let workbook = XLSX.utils.table_to_book(document.getElementById('tableView'));\r\n    let data = XLSX.write(workbook, {\r\n      bookType: \"xlsx\", // 要生成的文件类型\r\n      type: \"array\",\r\n    });\r\n    let blobData = new Blob([data], { type: \"application/octet-stream\" });\r\n    exportFn(blobData);\r\n  };\r\n  const exportFn = (blob) => {\r\n    const fileName = \"料场报表.xlsx\";\r\n    let downloadElement = document.createElement(\"a\");\r\n    let href = window.URL.createObjectURL(blob); //创建下载的链接\r\n    downloadElement.href = href;\r\n    downloadElement.download = fileName; //下载后文件名\r\n    document.body.appendChild(downloadElement);\r\n    downloadElement.click(); //点击下载\r\n    document.body.removeChild(downloadElement); //下载完成移除元素\r\n    window.URL.revokeObjectURL(href); //释放blob\r\n    message.success(\"已成功导出!\");\r\n  };\r\n  const fileReader = (file) => {\r\n    let reader = new FileReader();\r\n    //读入file\r\n    reader.readAsBinaryString(file);\r\n    reader.onload = (e) => {\r\n      let side = e.target.result;\r\n      //读取file, 提取数据\r\n      let workbook = XLSX.read(side, { type: \"binary\", cellStyles: true });\r\n      // let workbook = readFile('./rep.xlsx')\r\n      let html = \"\";\r\n\r\n      workbook.SheetNames.forEach(function (name, index) {\r\n        let ws = workbook.Sheets[name];\r\n        let str = XLSX.utils.sheet_to_html(ws, { header: 1, defval: \"\" });\r\n        console.log(str);\r\n        // 只截取table的内容\r\n        let startNo = str.indexOf(`<table>`);\r\n        let endNo = str.indexOf(`</table>`);\r\n        str = str.substring(startNo, endNo + `</table>`.length);\r\n        str = str.replace(/(\\b(?:data-t|data-v)=\".*?\")/g, \"\");\r\n        str = str.replace(\r\n          \"<table>\",\r\n          `<table border=\"1\" style=\"border-collapse:collapse; width: 100%; border:1px solid #666666; margin-bottom:5px;font-size:14px;margin: 15px 0;\">`\r\n        );\r\n        html += str;\r\n        console.log(html);\r\n      });\r\n      //setArrList(html)\r\n      //dangerouslySetInnerHTML = {{ __html: html }}\r\n      document.getElementById(\"tableView\").innerHTML = html;\r\n    };\r\n  };\r\n\r\n  return (\r\n    <div className=\"table-list\">\r\n      <div>\r\n      <input type=\"file\" ref={inputFile} onChange={fileChange} />\r\n      <Button type=\"primary\" onClick={createBook}>导出</Button>\r\n      </div>\r\n      <Spin spinning={loading}>\r\n        <div id=\"tableView\"></div>\r\n      </Spin>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["Repbox","props","useState","loading","inputFile","useRef","useEffect","exportFn","blob","downloadElement","document","createElement","href","window","URL","createObjectURL","download","body","appendChild","click","removeChild","revokeObjectURL","message","fileReader","file","reader","FileReader","readAsBinaryString","onload","e","side","target","result","workbook","XLSX","type","cellStyles","html","SheetNames","forEach","name","index","ws","Sheets","str","header","defval","console","log","startNo","indexOf","endNo","substring","length","replace","getElementById","innerHTML","className","ref","onChange","files","current","onClick","worksheet","push","wch","data","bookType","blobData","Blob","spinning","id"],"sourceRoot":""}