{"version":3,"file":"static/js/816.d4e6882d.chunk.js","mappings":"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","sources":["pages/Statistics.jsx"],"sourcesContent":["import React, { useState, createRef, useEffect } from \"react\";\r\nimport * as echarts from \"echarts\";\r\nimport \"./scss/statistics.scss\";\r\nexport default function Statistics() {\r\n  const [rateOption, setRateOption] = useState();\r\n  const dom = [];\r\n  for (let i = 0; i < 8; i++) {\r\n    dom.push(createRef());\r\n  }\r\n  const setOption = () => {\r\n    let option = {\r\n      backgroundColor: \"#0d073d\", \r\n      tooltip: {\r\n        trigger: \"item\",\r\n      },\r\n      title: [\r\n        {\r\n          text: \"周转率\",\r\n          textStyle: {\r\n            color: \"#22ac38\",\r\n            fontSize: 35,\r\n          },\r\n          itemGap: 20,\r\n          left: \"40%\",\r\n          top: \"40%\",\r\n        },\r\n      ],\r\n      legend: {\r\n        top: \"5%\",\r\n        left: \"center\",\r\n        show: false,\r\n      },\r\n      polar: [\r\n        {\r\n          center: [\"50%\", \"50%\"], //中心点位置\r\n          radius: [\"68%\", \"82%\"], //图形大小\r\n        },\r\n      ],\r\n      angleAxis: {\r\n        polarIndex: 0,\r\n        min: 0,\r\n        max: 100,\r\n        show: false,\r\n        // boundaryGap: ['40%', '40%'],\r\n        startAngle: 90,\r\n      },\r\n      radiusAxis: {\r\n        type: \"category\",\r\n        show: false,\r\n        axisLabel: {\r\n          show: false,\r\n        },\r\n        axisLine: {\r\n          show: false,\r\n        },\r\n        axisTick: {\r\n          show: false,\r\n        },\r\n      },\r\n\r\n      series: [\r\n        {\r\n          type: \"bar\",\r\n          z: 10,\r\n          name: \"周转率\",\r\n          data: [60],\r\n          coordinateSystem: \"polar\",\r\n          roundCap: true, // 是否圆角\r\n          barWidth: 32, //大的占比环\r\n          itemStyle: {\r\n            opacity: 1,\r\n            // color: \"#14d88e\"\r\n            color: {\r\n              type: \"linear\",\r\n              x: 0,\r\n              y: 1,\r\n              x2: 0,\r\n              y2: 0,\r\n              colorStops: [\r\n                {\r\n                  offset: 0,\r\n                  color: \"#2da178\", // 0% 处的颜色\r\n                },\r\n                {\r\n                  offset: 1,\r\n                  color: \"rgba(232, 248, 243, 0.3)\", // 100% 处的颜色\r\n                },\r\n              ],\r\n              global: false, // 缺省为 false\r\n            },\r\n          },\r\n        },\r\n        {\r\n          type: \"pie\",\r\n          name: \"内层细圆环\",\r\n          radius: [\"80%\", \"70%\"],\r\n          center: [\"50%\", \"50%\"], //中心点位置\r\n          startAngle: 99,\r\n          clockwise: true,\r\n          silent: true,\r\n          itemStyle: {\r\n            color: \"#f3f3f7\",\r\n            opacity: 0.3,\r\n          },\r\n          tooltip: {\r\n            show: false,\r\n          },\r\n          label: {\r\n            show: false,\r\n          },\r\n          data: [100],\r\n        },\r\n      ],\r\n    };\r\n\r\n    let myChart = echarts.init(dom[0].current);\r\n    myChart.setOption(option);\r\n    function random() {\r\n      return +(Math.random()*100).toFixed(1);\r\n    }\r\n    setInterval(function () {\r\n      const dynamicData = [random()];\r\n      myChart.setOption({\r\n        series: [\r\n          {\r\n            data: dynamicData.slice(),\r\n          },\r\n          {\r\n            data: [100],\r\n          }\r\n        ],\r\n      });\r\n    }, 3000);\r\n  };\r\n  const setColumn = () => {\r\n    let data_X = [\"第一\", \"第二\", \"第三\", \"第四\", \"第五\", \"第六\"];\r\n    let data_Y = [10, 20, 30, 5, 40, 60];\r\n    let TopColor = [\r\n      \"rgba(232, 255, 20,1)\",\r\n      \"rgba(12, 255, 255, 1)\",\r\n      \"rgba(30, 255, 254, 1)\",\r\n      \"rgba(255,255,255,1)\",\r\n      \"rgba(50,255,45,1)\",\r\n      \"rgba(194,80,56,1)\",\r\n    ];\r\n    let RightColor = [\r\n      \"rgba(232, 197, 11,0.6)\",\r\n      \"rgba(12, 215, 226, 0.6)\",\r\n      \"rgba(30, 170, 254, 0.6)\",\r\n      \"rgba(255,255,255,0.6)\",\r\n      \"rgba(0,0,45,0.6)\",\r\n      \"rgba(194,53,49,0.6)\",\r\n    ];\r\n    let barTopColor = [\r\n      \"rgba(232, 197, 11,1)\",\r\n      \"rgba(12, 215, 226, 1)\",\r\n      \"rgba(30, 170, 254, 1)\",\r\n      \"rgba(255,255,255,1)\",\r\n      \"#3fa280\",\r\n      \"rgba(194,53,49,1)\",\r\n    ];\r\n    let barBottomColor = [\r\n      \"rgba(232, 197, 11,0)\",\r\n      \"rgba(12, 215, 226, 0)\",\r\n      \"rgba(30, 170, 254, 0)\",\r\n      \"rgba(255,255,255,0)\",\r\n      \"rgba(0,0,45,0)\",\r\n      \"rgba(194,53,49, 0)\",\r\n    ];\r\n    let option = {\r\n      backgroundColor: \"#0d073d\",\r\n      tooltip: {\r\n        show: true,\r\n      },\r\n      grid: {\r\n        top: \"15%\",\r\n        bottom: \"20%\",\r\n        left: \"13%\",\r\n        right: \"3%\",\r\n      },\r\n      axisPointer: {\r\n        // show: false,\r\n        link: { xAxisIndex: \"all\" },\r\n        type: \"shadow\",\r\n        label: {\r\n          backgroundColor: \"#777\",\r\n        },\r\n      },\r\n      xAxis: {\r\n        data: data_X,\r\n\r\n        axisTick: {\r\n          show: false,\r\n        },\r\n        axisLine: {\r\n          // show: false,\r\n          symbol: [\"none\"],\r\n          symbolSize: [10, 17],\r\n          lineStyle: {\r\n            color: \"#00ffff\",\r\n            width: 0, //  改变坐标线的颜色\r\n          },\r\n        },\r\n        axisLabel: {\r\n          show: true,\r\n          interval: 0,\r\n          // rotate: -30,\r\n          margin: 25,\r\n          align: \"center\",\r\n          textStyle: {\r\n            fontSize: 12,\r\n            color: \"#00ffff\",\r\n          },\r\n        },\r\n      },\r\n      yAxis: {\r\n        splitLine: {\r\n          // show: false,\r\n\r\n          lineStyle: {\r\n            color: \"#00ffff\",\r\n            type: \"dashed\",\r\n            opacity: 0.4,\r\n          },\r\n        },\r\n        // axisTick: {\r\n        //   show: false,\r\n        // },\r\n        axisLine: {\r\n          // show: false,\r\n          lineStyle: {\r\n            color: \"#00ffff\",\r\n          },\r\n        },\r\n        // axisLabel: {\r\n        //   show: false,\r\n        // },\r\n      },\r\n      series: [\r\n        {\r\n          name: \"柱顶部\",\r\n          type: \"pictorialBar\",\r\n          symbol: \"diamond\",\r\n          symbolSize: [36, 10], // [36, 10],\r\n          symbolOffset: [0, -4.5], // [0, -5]\r\n          z: 20,\r\n          // borderColor:'#000',\r\n          // borderWidth:0.1,\r\n          itemStyle: {\r\n            normal: {\r\n              color: function (params) {\r\n                return TopColor[params.dataIndex];\r\n              },\r\n            },\r\n          },\r\n          label: {\r\n            show: true,\r\n            position: \"top\",\r\n            fontSize: 20,\r\n            fontFamily: \"tenxu\",\r\n            formatter: \"{c}\",\r\n          },\r\n          symbolPosition: \"end\",\r\n          data: data_Y,\r\n        },\r\n        {\r\n          name: \"柱底部\",\r\n          type: \"pictorialBar\",\r\n          symbol: \"none\",\r\n          symbolSize: [26, 10], // [36, 10]\r\n          symbolOffset: [0, 5], // [0, 5]\r\n          z: 12,\r\n          itemStyle: {\r\n            normal: {\r\n              color: function (params) {\r\n                return barTopColor[params.dataIndex];\r\n              },\r\n            },\r\n          },\r\n          data: data_Y,\r\n        },\r\n        {\r\n          type: \"bar\",\r\n          itemStyle: {\r\n            normal: {\r\n              // 中间柱子渐变色\r\n              color: function (params) {\r\n                return new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n                  {\r\n                    offset: 0,\r\n                    color: barTopColor[params.dataIndex],\r\n                  },\r\n                  {\r\n                    offset: 1,\r\n                    color: barBottomColor[params.dataIndex],\r\n                  },\r\n                ]);\r\n              },\r\n              barBorderRadius: [4, 0, 0, 100],\r\n            },\r\n          },\r\n          z: 16,\r\n          silent: true,\r\n          barWidth: 18,\r\n          barGap: \"-100%\", // Make series be overlap\r\n          data: data_Y,\r\n        },\r\n        {\r\n          tooltip: {\r\n            show: true,\r\n          },\r\n          type: \"bar\",\r\n          barWidth: 18,\r\n          // barCategoryGap:'60%',\r\n          itemStyle: {\r\n            //右面\r\n            normal: {\r\n              color: function (params) {\r\n                return new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n                  {\r\n                    offset: 0,\r\n                    color: RightColor[params.dataIndex],\r\n                  },\r\n                  {\r\n                    offset: 1,\r\n                    color: barBottomColor[params.dataIndex],\r\n                  },\r\n                ]);\r\n              },\r\n              borderWidth: 0.1,\r\n              barBorderRadius: [0, 5, 100, 0],\r\n            },\r\n          },\r\n          data: data_Y,\r\n          barGap: 0,\r\n        },\r\n      ],\r\n      animationDuration: 0,\r\n      animationDurationUpdate: 1000,\r\n      animationEasing: 'linear',\r\n      animationEasingUpdate: 'linear'\r\n    };\r\n    let myChart = echarts.init(dom[1].current);\r\n    myChart.setOption(option);\r\n    function random() {\r\n      return +(Math.random()*1000).toFixed(1);\r\n    }\r\n    setInterval(function () {\r\n      const dynamicData = [random(), random(), random(), random(),random(),random()];\r\n      myChart.setOption({\r\n        series: [\r\n          {\r\n            data: dynamicData.slice(),\r\n          },\r\n          {\r\n            data: dynamicData.slice(),\r\n          },\r\n          {\r\n            data: dynamicData.slice(),\r\n          },\r\n          {\r\n            data: dynamicData.slice(),\r\n          },\r\n        ],\r\n      });\r\n    }, 3000);\r\n  };\r\n  const setBar = () => {\r\n    var category = [\"服务器数\", \"计算容量\", \"内存容量\", \"存储容量\"];\r\n    // var barData = [\r\n    //   0,\r\n    //   ~~(Math.random() * 100),\r\n    //   ~~(Math.random() * 100),\r\n    //   ~~(Math.random() * 100),\r\n    //   ~~(Math.random() * 100),\r\n    // ];\r\n    let maxData = 100;\r\n    var barData = [6, 6, 1, 0.3];\r\n    var lineData = [7, 10, 10, 10, 10];\r\n    let option = {\r\n      backgroundColor: \"#0d073d\", //背景色\r\n      grid: [\r\n        {\r\n          //图形的位置\r\n          left: \"10%\",\r\n          bottom: \"20%\",\r\n          top: 3,\r\n          right: \"20%\",\r\n        },\r\n      ],\r\n      tooltip: {},\r\n      xAxis: {\r\n        max: maxData,\r\n        splitLine: { show: false },\r\n        offset: 10,\r\n        axisLine: {\r\n          lineStyle: {\r\n            color: \"#999\",\r\n          },\r\n        },\r\n        axisLabel: {\r\n          margin: 10,\r\n        },\r\n      },\r\n      yAxis: {\r\n        data: [\"2013\", \"2014\", \"2015\", \"2016\"],\r\n        inverse: true,//反向放置\r\n        axisTick: { show: false },\r\n        axisLine: { show: false },\r\n        axisLabel: {\r\n          margin: 10,\r\n          color: \"#999\",\r\n          fontSize: 16,\r\n        },\r\n      },\r\n      series: [\r\n        {\r\n          // current data\r\n          type: \"pictorialBar\",\r\n          symbol: \"rect\",\r\n          symbolRepeat: \"fixed\",\r\n          symbolMargin: \"10%\",\r\n          symbolClip: true,\r\n          symbolSize: [10, 30],\r\n          symbolBoundingData: maxData,\r\n          data: [20, 20, 60, 70],\r\n          itemStyle: {\r\n            normal: {\r\n              // barMaxWidth: \"20%\",\r\n              // barBorderRadius: 100,\r\n              color: \"#6DE8FA\",\r\n            },\r\n          },\r\n          label: {\r\n            show: true,\r\n            formatter: function (params) {\r\n              return ((params.value / maxData) * 100).toFixed(1) + \" %\";\r\n            },\r\n            position: \"right\",\r\n            offset: [10, 0],\r\n            color: \"#8cdcfe\",\r\n            fontSize: 18,\r\n          },\r\n          markLine: {\r\n            symbol: \"none\",\r\n            label: {\r\n              formatter: \"max: {c}\",\r\n              position: \"start\",\r\n            },\r\n            lineStyle: {\r\n              color: \"green\",\r\n              type: \"dotted\",\r\n              opacity: 0.2,\r\n              width: 2,\r\n            },\r\n            data: [\r\n              {\r\n                type: \"max\",\r\n              },\r\n            ],\r\n          },\r\n          z: 10,\r\n        },\r\n        {\r\n          // full data\r\n          tooltip: {show:false},\r\n          type: \"pictorialBar\",\r\n          animationDuration: 0,\r\n          symbolRepeat: \"fixed\",\r\n          symbolMargin: \"10%\",\r\n          symbol: \"rect\",\r\n          symbolSize: [10, 30],\r\n          symbolBoundingData: maxData,\r\n          data: [maxData, maxData, maxData, maxData],\r\n          z: 5,\r\n        },\r\n      ],\r\n      animationDuration: 0,\r\n      animationDurationUpdate: 1000,\r\n      animationEasing: 'linear',\r\n      animationEasingUpdate: 'linear'\r\n    };\r\n    let myChart = echarts.init(dom[2].current);\r\n    myChart.setOption(option);\r\n    // Make dynamic data.\r\n    function random() {\r\n      return +(Math.random() * (maxData - 10)).toFixed(1);\r\n    }\r\n    setInterval(function () {\r\n      const dynamicData = [random(), random(), random(), random()];\r\n      myChart.setOption({\r\n        series: [\r\n          {\r\n            data: dynamicData.slice(),\r\n          },\r\n          {\r\n            data: [maxData, maxData, maxData, maxData],\r\n          },\r\n        ],\r\n      });\r\n    }, 3000);\r\n  };\r\n  useEffect(() => {\r\n    setOption();\r\n    setColumn();\r\n    setBar();\r\n  }, []);\r\n  return (\r\n    <div className=\"table-list home-list\">\r\n      <div ref={dom[0]} style={{ width: \"100%\", height: \"100%\" }}></div>\r\n      <div ref={dom[1]} style={{ width: \"100%\", height: \"100%\" }}></div>\r\n      <div ref={dom[2]} style={{ width: \"100%\", height: \"100%\" }}></div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["Statistics","useState","dom","i","push","createRef","useEffect","myChart","echarts","current","setOption","backgroundColor","tooltip","trigger","title","text","textStyle","color","fontSize","itemGap","left","top","legend","show","polar","center","radius","angleAxis","polarIndex","min","max","startAngle","radiusAxis","type","axisLabel","axisLine","axisTick","series","z","name","data","coordinateSystem","roundCap","barWidth","itemStyle","opacity","x","y","x2","y2","colorStops","offset","global","clockwise","silent","label","setInterval","dynamicData","Math","random","toFixed","slice","data_Y","TopColor","RightColor","barTopColor","barBottomColor","option","grid","bottom","right","axisPointer","link","xAxisIndex","xAxis","symbol","symbolSize","lineStyle","width","interval","margin","align","yAxis","splitLine","symbolOffset","normal","params","dataIndex","position","fontFamily","formatter","symbolPosition","barBorderRadius","barGap","borderWidth","animationDuration","animationDurationUpdate","animationEasing","animationEasingUpdate","setColumn","maxData","inverse","symbolRepeat","symbolMargin","symbolClip","symbolBoundingData","value","markLine","setBar","className","ref","style","height"],"sourceRoot":""}